<<<<<<< HEAD
.hydra/
output/
ckpt/
# Byte-compiled / optimized / DLL files
__pycache__/
**/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Profiling data
.prof

# Folder specific to your needs
**/tmp/
**/outputs/skyseg.onnx
skyseg.onnx

# pixi environments
.pixi
*.egg-info
=======
# VGGT-Gaussian Splatting Research Project - Git Ignore
# =======================================================

# 🔥 HEAVY MODEL FILES (4.7GB+)
# =============================
*.pt
*.pth
*.ckpt
*.safetensors
vggt_1b_model.pt

# 🔥 PLY FILES (454MB each)
# =========================
*.ply

# 🔥 DATASETS & RAW DATA (GB+)
# =============================
datasets/
results/
*.zip
*.tar
*.gz
images.zip
*.db

# 🔥 EXPERIMENT OUTPUTS (GB+)
# ============================
experiments/*/output/
experiments/*/ckpts/
experiments/*/results/
experiments/*/logs/
experiments/*/wandb/
experiments/*/tb_logs/

# 🔥 EXTERNAL LIBRARIES (clone separately)
# ========================================
libs/

# 🔥 PYTHON ENVIRONMENTS (1GB+ each)
# ===================================
envs/
*_env/
.venv/
.venv-backups/
venv/
env/

# 📁 SYSTEM & CACHE FILES
# ========================
.claude/
.gradio/
.ipynb_checkpoints/
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so
*.dylib
*.dll

# 📄 LOGS & TEMPORARY FILES
# ==========================
*.log
*.out
*.err
ports.log
nohup.out
.DS_Store
Thumbs.db
*.tmp
*.temp

# 🔧 IDE & EDITOR FILES
# ======================
.vscode/
.idea/
*.swp
*.swo
*~
.sublime-*

# 📊 LARGE RESULT FILES
# ======================
*.h5
*.hdf5
*.pkl
*.pickle
*.npy
*.npz

# 🎥 MEDIA FILES (if large)
# ==========================
*.mp4
*.avi
*.mov
*.mkv
*.webm

# 💾 BACKUP FILES
# ================
*.bak
*.backup
*.old
*_backup
*_old

# 📈 PROFILING & DEBUGGING
# =========================
*.prof
*.profile
.coverage
htmlcov/
.pytest_cache/

# ⚡ CUDA CACHE
# =============
.nv/

# 🔄 Keep these small files:
# ===========================
# !docs/
# !scripts/
# !libs/*/src/
# !requirements.txt
# !*.md
# !*.yaml
# !*.yml
# !*.json (small configs)

# 📋 NOTES:
# - Repository size target: ~50MB
# - Large files go to external storage (Google Drive, etc.)
# - Use Git LFS for essential large files if needed
>>>>>>> 64508f139269a2b3fa431d33e58c92211bc04346
